reedline:
  ✔ how does it handle grapheme clusters? @done(22-07-22 17:37)

crossterm:
  ✔ is there a way to use crossterm (at startup) to a list of grapheme cluster sizes for that terminal @done(22-07-22 17:37)

lib.rs:
  ☐ make `UnicodeStringExt` trait
    - simplify handling of a String which has grapheme clusters
    - split the string into a Vec of grapheme clusters structs
    - get the "logical" index into the Vec given then "physical" index (byte boundary based)
    - get the "physical" index into the String given then "logical" index (grapheme cluster based)
    - write tests
  ☐ move the code into r3bl-cmdr codebase

action items for tui library (r3bl-cmdr codebase):
  ☐ extend `StateManageFocus` so it has methods that allow access to a `HashMap<String, Position>`
    - an `id: String` is not enough to store in the `StateManageFocus` trait
    - each `id` may have a `Position` associated with it
    - this is used to draw the "cursor" (whatever that means to a `RenderComponent`)
      - for an editor, it will be the insertion point
      - for a text viewer, it will be the cursor position which can be moved around

  ☐ create a POC `RenderComponent` that shows a cursor & graphemes
    - display a string eg: `Hi 📦 🙏🏽 👨🏾‍🤝‍👨🏿.`
    - allow component to have focus
    - allow component to have a cursor position
    - show cursor moving around the string (respecting grapheme clusters)
      - use JT's approach that's outlined in the README.md
